export enum AliasDeployedContracts {
  UtilsUpgradeable_Proxy = 'UtilsUpgradeable_Proxy',
  UtilsUpgradeable_Implementation = 'UtilsUpgradeable_Implementation',
  ProxyAdmin = 'ProxyAdmin',
  BribeUpgradeable_Implementation = 'BribeUpgradeable_Implementation',
  Pair_Implementation = 'Pair_Implementation',
  UniswapV2PartialRouter = 'UniswapV2PartialRouter',
  VoterUpgradeable_Implementation = 'VoterUpgradeable_Implementation',
  VoterUpgradeable_Proxy = 'VoterUpgradeable_Proxy',
  VotingEscrowUpgradeable_Proxy = 'VotingEscrowUpgradeable_Proxy',
  VotingEscrowUpgradeable_Implementation = 'VotingEscrowUpgradeable_Implementation',
  VeArtProxy = 'VeArtProxy',
  VeArtProxyStatic = 'VeArtProxyStatic',
  RouterV2 = 'RouterV2',
  PairAPIUpgradeable_Implementation = 'PairAPIUpgradeable_Implementation',
  PairAPIUpgradeable_Proxy = 'PairAPIUpgradeable_Proxy',
  RewardAPIUpgradeable_Implementation = 'RewardAPIUpgradeable_Implementation',
  RewardAPIUpgradeable_Proxy = 'RewardAPIUpgradeable_Proxy',
  CompoundVeFNXManagedNFTStrategyUpgradeable_Implementation = 'CompoundVeFNXManagedNFTStrategyUpgradeable_Implementation',
  PairFactoryUpgradeable_Implementation = 'PairFactoryUpgradeable_Implementation',
  PairFactoryUpgradeable_Proxy = 'PairFactoryUpgradeable_Proxy',
  FeesVaultFactoryUpgradeable_Implementation = 'FeesVaultFactoryUpgradeable_Implementation',
  FeesVaultFactoryUpgradeable_Proxy = 'FeesVaultFactoryUpgradeable_Proxy',
  RouterV2PathProviderUpgradeable_Implementation = 'RouterV2PathProviderUpgradeable_Implementation',
  RouterV2PathProviderUpgradeable_Proxy = 'RouterV2PathProviderUpgradeable_Proxy',
  CompoundVeFNXManagedNFTStrategyFactoryUpgradeable_Implementation = 'CompoundVeFNXManagedNFTStrategyFactoryUpgradeable_Implementation',
  CompoundVeFNXManagedNFTStrategyFactoryUpgradeable_Proxy = 'CompoundVeFNXManagedNFTStrategyFactoryUpgradeable_Proxy',
  ManagedNFTManagerUpgradeable_Implementation = 'ManagedNFTManagerUpgradeable_Implementation',
  ManagedNFTManagerUpgradeable_Proxy = 'ManagedNFTManagerUpgradeable_Proxy',
  BlastRebasingTokensGovernorUpgradeable_Implementation = 'BlastRebasingTokensGovernorUpgradeable_Implementation',
  BlastRebasingTokensGovernorUpgradeable_Proxy = 'BlastRebasingTokensGovernorUpgradeable_Proxy',
  MerklGaugeMiddleman = 'MerklGaugeMiddleman',
  BribeFactoryUpgradeable_Implementation = 'BribeFactoryUpgradeable_Implementation',
  BribeFactoryUpgradeable_Proxy = 'BribeFactoryUpgradeable_Proxy',
  VeNFTAPIUpgradeable_Implementation = 'VeNFTAPIUpgradeable_Implementation',
  VeNFTAPIUpgradeable_Proxy = 'VeNFTAPIUpgradeable_Proxy',
  PerpetualsTradersRewarderUpgradeable_Implementation = 'PerpetualsTradersRewarderUpgradeable_Implementation',
  PerpetualsTradersRewarderUpgradeable_Proxy = 'PerpetualsTradersRewarderUpgradeable_Proxy',
  VeBoostUpgradeable_Implementation = 'VeBoostUpgradeable_Implementation',
  VeBoostUpgradeable_Proxy = 'VeBoostUpgradeable_Proxy',
  MinterUpgradeable_Implementation = 'MinterUpgradeable_Implementation',
  MinterUpgradeable_Proxy = 'MinterUpgradeable_Proxy',
  VeFnxSplitMerklAidropUpgradeable_Implementation = 'VeFnxSplitMerklAidropUpgradeable_Implementation',
  VeFnxSplitMerklAidropUpgradeable_Proxy = 'VeFnxSplitMerklAidropUpgradeable_Proxy',
  RFenix = 'RFenix',
  FenixRaiseUpgradeable_Implementation = 'FenixRaiseUpgradeable_Implementation',
  FenixRaiseUpgradeable_Proxy = 'FenixRaiseUpgradeable_Proxy',
  FeesVaultUpgradeable_Implementation = 'FeesVaultUpgradeable_Implementation',
  PerpetualsGaugeUpgradeable_Implementation = 'PerpetualsGaugeUpgradeable_Implementation',
  PerpetualsGaugeUpgradeable_Proxy = 'PerpetualsGaugeUpgradeable_Proxy',
  VeFnxDistributorUpgradeable_Implementation = 'VeFnxDistributorUpgradeable_Implementation',
  VeFnxDistributorUpgradeable_Proxy = 'VeFnxDistributorUpgradeable_Proxy',
  SingelTokenVirtualRewarderUpgradeable_Implementation = 'SingelTokenVirtualRewarderUpgradeable_Implementation',
  GaugeFactoryUpgradeable_Implementation = 'GaugeFactoryUpgradeable_Implementation',
  GaugeFactory_V2Pools_Proxy = 'GaugeFactory_V2Pools_Proxy',
  GaugeFactory_V3Pools_Proxy = 'GaugeFactory_V3Pools_Proxy',
  GaugeUpgradeable_V2Pools_Implementation = 'GaugeUpgradeable_V2Pools_Implementation',
  GaugeUpgradeable_V3Pools_Implementation = 'GaugeUpgradeable_V3Pools_Implementation',
  AlgebraFNXPriceProviderUpgradeable_Implementation = 'AlgebraFNXPriceProviderUpgradeable_Implementation',
  AlgebraFNXPriceProviderUpgradeable_Proxy = 'AlgebraFNXPriceProviderUpgradeable_Proxy',
  Fenix = 'Fenix',
  BlastGovernorUpgradeable_Implementation = 'BlastGovernorUpgradeable_Implementation',
  BlastGovernorUpgradeable_Proxy = 'BlastGovernorUpgradeable_Proxy',
  MDCBlastMock = 'MDCBlastMock',
  MinimalLinearVestingUpgradeable_Proxy = 'MinimalLinearVestingUpgradeable_Proxy',
  MinimalLinearVestingUpgradeable_Implementation = 'MinimalLinearVestingUpgradeable_Implementation',
  GaugeRewader_Implementation = 'GaugeRewader_Implementation',
  GaugeRewader_Proxy = 'GaugeRewader_Proxy',
  AlgebraFactory_Proxy = 'AlgebraFactory_Proxy',
  BasePluginV1Factory_Proxy = 'BasePluginV1Factory_Proxy',
  ManualFNXPriceProvider = 'ManualFNXPriceProvider',
  veFNXClaimer = 'veFNXClaimer',
  GetInformationAggregatorUpgradeable_ProxyAdmin = 'GetInformationAggregatorUpgradeable_ProxyAdmin',
  GetInformationAggregatorUpgradeable_Proxy = 'GetInformationAggregatorUpgradeable_Proxy',
  GetInformationAggregatorUpgradeable_Implementation = 'GetInformationAggregatorUpgradeable_Implementation',
}

enum ThirdPart {
  Blast = 'IBlastFull',
}

enum ContractsInstanceName {
  GetInformationAggregatorUpgradeable = 'GetInformationAggregatorUpgradeable',
  UtilsUpgradeable = 'UtilsUpgradeable',
  ProxyAdmin = 'ProxyAdmin',
  BribeUpgradeable = 'BribeUpgradeable',
  Pair = 'Pair',
  UniswapV2PartialRouter = 'UniswapV2PartialRouter',
  VoterUpgradeable = 'VoterUpgradeableV2',
  VotingEscrowUpgradeable = 'VotingEscrowUpgradeableV2',
  VeArtProxy = 'VeArtProxy',
  VeArtProxyStatic = 'VeArtProxyStatic',
  RouterV2 = 'RouterV2',
  PairAPIUpgradeable = 'PairAPIUpgradeable',
  RewardAPIUpgradeable = 'RewardAPIUpgradeable',
  CompoundVeFNXManagedNFTStrategyUpgradeable = 'CompoundVeFNXManagedNFTStrategyUpgradeable',
  GaugeUpgradeable = 'GaugeUpgradeable',
  PairFactoryUpgradeable = 'PairFactoryUpgradeable',
  FeesVaultFactoryUpgradeable = 'FeesVaultFactoryUpgradeable',
  RouterV2PathProviderUpgradeable = 'RouterV2PathProviderUpgradeable',
  CompoundVeFNXManagedNFTStrategyFactoryUpgradeable = 'CompoundVeFNXManagedNFTStrategyFactoryUpgradeable',
  ManagedNFTManagerUpgradeable = 'ManagedNFTManagerUpgradeable',
  BlastRebasingTokensGovernorUpgradeable = 'BlastRebasingTokensGovernorUpgradeable',
  MerklGaugeMiddleman = 'MerklGaugeMiddleman',
  BribeFactoryUpgradeable = 'BribeFactoryUpgradeable',
  VeNFTAPIUpgradeable = 'VeNFTAPIUpgradeable',
  PerpetualsTradersRewarderUpgradeable = 'PerpetualsTradersRewarderUpgradeable',
  VeBoostUpgradeable = 'VeBoostUpgradeable',
  MinterUpgradeable = 'MinterUpgradeable',
  VeFnxSplitMerklAidropUpgradeable = 'VeFnxSplitMerklAidropUpgradeable',
  RFenix = 'RFenix',
  FenixRaiseUpgradeable = 'FenixRaiseUpgradeable',
  FeesVaultUpgradeable = 'FeesVaultUpgradeable',
  PerpetualsGaugeUpgradeable = 'PerpetualsGaugeUpgradeable',
  VeFnxDistributorUpgradeable = 'VeFnxDistributorUpgradeable',
  SingelTokenVirtualRewarderUpgradeable = 'SingelTokenVirtualRewarderUpgradeable',
  GaugeFactoryUpgradeable = 'GaugeFactoryUpgradeable',
  AlgebraFNXPriceProviderUpgradeable = 'AlgebraFNXPriceProviderUpgradeable',
  Fenix = 'Fenix',
  TransparentUpgradeableProxy = 'TransparentUpgradeableProxy',
  BlastGovernorUpgradeable = 'BlastGovernorUpgradeable',
  MinimalLinearVestingUpgradeable = 'MinimalLinearVestingUpgradeable',
  GaugeRewarder = 'GaugeRewarder',
  ManualFNXPriceProvider = 'ManualFNXPriceProvider',
  veFNXClaimer = 'veFNXClaimer',
}

enum ContractsMocksInstanceName {
  ERC20OwnableMock = 'ERC20OwnableMock',
}

export const InstanceName = {
  ...ContractsInstanceName,
  ...ThirdPart,
  ...ContractsMocksInstanceName,
};

export type InstanceName = ContractsInstanceName | ContractsMocksInstanceName | ThirdPart;
